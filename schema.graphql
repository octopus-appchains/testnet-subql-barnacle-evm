type Block @entity {
  id: ID!

  number: BigInt @index
  timestamp: Date @index
  parentHash: String
  specVersion: Int

  extrinsics: [Extrinsic] @derivedFrom(field: "block")
  events: [Event] @derivedFrom(field: "block")
}

type Extrinsic @entity {
  id: ID!

  hash: String! @index
  method: String @index
  section: String @index
  args: String
  signer: Account @index #create relation to account
  nonce: BigInt
  timestamp: Date @index
  signature: String
  tip: BigInt
  isSigned: Boolean
  isSuccess: Boolean

  block: Block #create relation to block
  events: [Event] @derivedFrom(field: "extrinsic")
  calls: [Call] @derivedFrom(field: "extrinsic")
}

type Event @entity {
  id: ID!

  index: Int!
  section: String! @index
  method: String! @index
  data: String!

  block: Block #create relation to block
  extrinsic: Extrinsic #create relation to extrins
}

type Call @entity {
  id: ID!

  section: String @index
  method: String @index
  args: String
  timestamp: Date @index
  isSuccess: Boolean

  signer: Account #create ration to account
  extrinsic: Extrinsic #create relation to extrinsic
  parentCall: Call #create relation to call
  calls: [Call] @derivedFrom(field: "parentCall")
}

type Account @entity {
  id: ID!
  nonce: Int @index
  freeBalance: BigInt
  reservedBalance: BigInt
  miscFrozenBalance: BigInt
  feeFrozenBalance: BigInt
  isContract: Boolean @index
  creator: Account @index
  createdAt: Date @index

  extrinsics: [Extrinsic] @derivedFrom(field: "signer")
  calls: [Call] @derivedFrom(field: "signer")
  transferIn: [SystemTokenTransfer] @derivedFrom(field: "to")
  transferOut: [SystemTokenTransfer] @derivedFrom(field: "from")

  evmLogs: [EvmLog] @derivedFrom(field: "contract")
  transactionIn: [Transaction] @derivedFrom(field: "to")
  transactionOut: [Transaction] @derivedFrom(field: "from")

  erc20Balances: [Erc20Balance] @derivedFrom(field: "account")
  erc20TransferIn: [Erc20Transfer] @derivedFrom(field: "to")
  erc20TransferOut: [Erc20Transfer] @derivedFrom(field: "from")

  erc721Balances: [Erc721Balance] @derivedFrom(field: "account")
  erc721TransferIn: [Erc721Transfer] @derivedFrom(field: "to")
  erc721TransferOut: [Erc721Transfer] @derivedFrom(field: "from")

  erc1155Balances: [Erc1155Balance] @derivedFrom(field: "account")
  erc1155TransferIn: [Erc1155Transfer] @derivedFrom(field: "to")
  erc1155TransferOut: [Erc1155Transfer] @derivedFrom(field: "from")
}

type SystemTokenTransfer @entity {
  id: ID!

  from: Account @index
  to: Account @index
  amount: BigInt @index
  timestamp: Date @index
  extrinsic: Extrinsic
}

type EvmLog @entity {
  id: ID!
  transaction: Transaction @index
  logIndex: Int
  contract: Account @index
  data: String
  topics: [String]
  timestamp: Date @index
}

type Transaction @entity {
  id: ID!
  transactionHash: String
  from: Account
  to: Account
  isSuccess: Boolean
  type: String
  signature: String
  value: BigInt
  nonce: Int
  gasLimit: BigInt
  gasPrice: BigInt
  maxFeePerGas: BigInt
  maxPriorityFeePerGas: BigInt
  gasUsed: BigInt
  accessList: String
  inputData: String
  exitReason: String
  timestamp: Date
  block: Block
  extrinsic: Extrinsic

  logs: [EvmLog] @derivedFrom(field: "transaction")
  erc20Transfers: [Erc20Transfer] @derivedFrom(field: "transaction")
  erc721Transfers: [Erc721Transfer] @derivedFrom(field: "transaction")
  erc1155Transfers: [Erc1155Transfer] @derivedFrom(field: "transaction")
}

type Erc20TokenContract @entity {
  id: ID!
  symbol: String
  name: String
  contract: Account @index
  decimals: Int
  totalSupply: BigInt

  balances: [Erc20Balance] @derivedFrom(field: "tokenContract")
  erc20Transfers: [Erc20Transfer] @derivedFrom(field: "tokenContract")
}

type Erc20Balance @entity {
  id: ID!
  account: Account @index
  tokenContract: Erc20TokenContract @index
  value: BigInt
}

type Erc20Transfer @entity {
  id: ID!
  from: Account @index
  to: Account @index
  tokenContract: Erc20TokenContract @index
  value: BigInt
  transaction: Transaction @index
  timestamp: Date
}

type Erc721TokenContract @entity {
  id: ID!
  symbol: String
  name: String
  contract: Account @index

  tokens: [Erc721Token] @derivedFrom(field: "tokenContract")
  balances: [Erc721Balance] @derivedFrom(field: "tokenContract")
  erc721Transfers: [Erc721Transfer] @derivedFrom(field: "tokenContract")
}

type Erc721Token @entity {
  id: ID!
  tokenContract: Erc721TokenContract @index
  idInContract: BigInt @index
  tokenURI: String

  balances: [Erc721Balance] @derivedFrom(field: "token")
  erc721Transfers: [Erc721Transfer] @derivedFrom(field: "token")
}

type Erc721Balance @entity {
  id: ID!
  tokenContract: Erc721TokenContract @index
  account: Account @index
  token: Erc721Token @index
}

type Erc721Transfer @entity {
  id: ID!
  from: Account @index
  to: Account @index
  tokenContract: Erc721TokenContract @index
  token: Erc721Token
  transaction: Transaction @index
  timestamp: Date
}

type Erc1155TokenContract @entity {
  id: ID!
  contract: Account @index

  tokens: [Erc1155Token] @derivedFrom(field: "tokenContract")
  balances: [Erc1155Balance] @derivedFrom(field: "tokenContract")
  erc1155Transfers: [Erc1155Transfer] @derivedFrom(field: "tokenContract")
}

type Erc1155Token @entity {
  id: ID!
  tokenContract: Erc1155TokenContract @index
  uri: String
  idInContract: BigInt @index
  totalSupply: BigInt

  balances: [Erc1155Balance] @derivedFrom(field: "token")
  erc1155Transfers: [Erc1155Transfer] @derivedFrom(field: "token")
}

type Erc1155Balance @entity {
  id: ID!
  tokenContract: Erc1155TokenContract @index
  account: Account @index
  token: Erc1155Token @index
  value: BigInt
}

type Erc1155Transfer @entity {
  id: ID!
  operator: Account @index
  from: Account @index
  to: Account @index
  tokenContract: Erc1155TokenContract @index
  token: Erc1155Token
  value: BigInt
  transaction: Transaction @index
  timestamp: Date
}

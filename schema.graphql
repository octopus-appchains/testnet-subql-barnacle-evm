type Block @entity {
  id: ID!

  number: BigInt @index
  timestamp: Date @index
  parentHash: String
  specVersion: Int

  extrinsics: [Extrinsic] @derivedFrom(field: "block")
  events: [Event] @derivedFrom(field: "block")
}

type Extrinsic @entity {
  id: ID!

  hash: String! @index
  method: String @index
  section: String @index
  args: String
  signer: Account @index #create relation to account
  nonce: BigInt
  timestamp: Date @index
  signature: String
  tip: BigInt
  isSigned: Boolean
  isSuccess: Boolean

  block: Block #create relation to block
  events: [Event] @derivedFrom(field: "extrinsic")
  calls: [Call] @derivedFrom(field: "extrinsic")
}

type Event @entity {
  id: ID!

  index: Int!
  section: String! @index
  method: String! @index
  data: String!

  block: Block #create relation to block
  extrinsic: Extrinsic #create relation to extrins
}

type Call @entity {
  id: ID!

  section: String @index
  method: String @index
  args: String
  timestamp: Date @index
  isSuccess: Boolean

  signer: Account #create ration to account
  extrinsic: Extrinsic #create relation to extrinsic
  parentCall: Call #create relation to call
  calls: [Call] @derivedFrom(field: "parentCall")
}

type Account @entity {
  id: ID!
  nonce: Int
  freeBalance: BigInt
  reservedBalance: BigInt
  miscFrozenBalance: BigInt
  feeFrozenBalance: BigInt
  isContract: Boolean
  creator: Account
  createdAt: Date @index

  extrinsics: [Extrinsic] @derivedFrom(field: "signer")
  transferIn: [SystemTokenTransfer] @derivedFrom(field: "to")
  transferOut: [SystemTokenTransfer] @derivedFrom(field: "from")
  transactionIn: [Transaction] @derivedFrom(field: "to")
  transactionOut: [Transaction] @derivedFrom(field: "from")
}

type SystemTokenTransfer @entity {
  id: ID!

  from: Account @index
  to: Account @index
  amount: BigInt @index
  timestamp: Date @index
  extrinsic: Extrinsic
}

type EvmLog @entity {
  id: ID!
  transaction: Transaction
  logIndex: Int
  address: String
  data: String
  topics: [String]
  timestamp: Date
}

type Transaction @entity {
  id: ID!
  transactionHash: String
  from: Account
  to: Account
  isSuccess: Boolean
  value: BigInt
  nonce: Int
  gasLimit: BigInt
  maxFeePerGas: BigInt
  maxPriorityFeePerGas: BigInt
  gasUsed: BigInt
  inputData: String
  exitReason: String
  timestamp: Date

  block: Block
  extrinsic: Extrinsic
  logs: [EvmLog] @derivedFrom(field: "transaction")
}
